


format-watch(n)           Soar Commands           format-watch(n)



_________________________________________________________________

NAME
     format-watch - Control the format of printed objects

SYNOPSIS
     format-watch [-_s_t_a_c_k | -_o_b_j_e_c_t] [_o_p_e_r_a_t_i_o_n _c_l_a_s_s [_n_a_m_e] _f_o_r_-
     _m_a_t]
     operation ::= -add | -remove
     class     ::= s | o | *
     format    ::= {sequence of format masks}
_________________________________________________________________

DESCRIPTION
     The format-watch command defines  the  format  to  use  when
     printing Soar objects and the Soar goal stack.  The optional
     _t_y_p_e, if present, must be the switch -object or  -stack  and
     indicates  which format to manipulate.  Object trace formats
     control how Soar prints an object--e.g., a certain operator,
     problem-space,  etc.   Stack  trace formats control how Soar
     prints its context stack selections in  watch  0  and  print
     -stack  printouts.   If  no  _t_y_p_e  is  given, then -stack is
     assumed.

     The second portion of the format-watch command is the _a_c_t_i_o_n
     to  apply  to the selected trace format.  An action consists
     of  adding  or  removing  formats  to  selected  classes  of
     objects.  An _a_c_t_i_o_n has the following form:

               _o_p_e_r_a_t_i_o_n _c_l_a_s_s [_n_a_m_e] _f_o_r_m_a_t
9
     The _o_p_e_r_a_t_i_o_n must be  either  -add  or  -remove.   An  -add
     operation adds new trace formats replacing any existing ones
     with identical applicability conditions.  A  -remove  opera-
     tion removes trace formats with the given applicability con-
     ditions. The combination of _c_l_a_s_s and _n_a_m_e define the appli-
     cability  conditions  of  the _f_o_r_m_a_t (i.e., which classes of
     objects the _f_o_r_m_a_t applies to).  The _c_l_a_s_s must be either  s
     or  o  and indicates that the operation applies to states or
     operators, respectively.  The wildcard symbol * may also  be
     used to indicate that the _f_o_r_m_a_t applies to all objects.  If
     an -object trace is being manipulated, then an optional _n_a_m_e
     may  be  given indicating the format applies only to objects
     with that name.  If a -stack  trace  is  being  manipulated,
     then  an  optional  _n_a_m_e  may be given indicating the format
     applies only within problem spaces of that name.

     The _f_o_r_m_a_t string can be any  sequence  of  characters  sur-
     rounded  by  curly  braces.  Note that double quotes are not
     sufficient because the square brackets in the format  string
     will  be  interpreted  as  a command to be evaluated by Tcl.
     Certain formatting controls can be used within the  string--



Soar                     Last change:                           1


9


format-watch(n)           Soar Commands           format-watch(n)



     see the section FORMAT CONTROLS below for more information.


     If no arguments are  given,  then  format-watch  prints  the
     current format settings.


FORMAT CONTROLS
     The following control sequences can  be  used  within  trace
     format strings.  The _S indicates the sequence is ONLY usable
     in stack traces:

     %cs  print the current state using  the  appropriate  object
          trace format (_S)

     %co  print the current operator using the appropriate object
          trace format (_S)

     %dc  print the current decision cycle number (_S).  Not mean-
          ingful  and  therefore ignored in stack traces produced
          by the print -stack command.

     %ec  print the current elaboration cycle  number  (_S).   Not
          meaningful  and  therefore ignored in stack traces pro-
          duced by the print -stack command.

     %sd  print the current subgoal depth (_S).  This  uses  0  as
          the top level.

     %rsd[_p_a_t_t_e_r_n]
          repeat (subgoal depth) times: print the  given  _p_a_t_t_e_r_n
          (_S).

     %left[_n_u_m,_p_a_t_t_e_r_n]
          print the _p_a_t_t_e_r_n left justified  in  a  field  of  _n_u_m
          spaces.

     %right[_n_u_m,_p_a_t_t_e_r_n]
          print the _p_a_t_t_e_r_n right justified in  a  field  of  _n_u_m
          spaces.

     %id  print the identifier of the current object.

     %v[_a_t_t_r]
          print the value(s) of attribute ^_a_t_t_r  on  the  current
          object.   If  there  is no ^_a_t_t_r on the current object,
          nothing is printed.

     %v[_p_a_t_h]
          same as the above, only follow the given attribute _p_a_t_h
          to get the value(s).  A _p_a_t_h is a sequence of attribute
          names separated by periods, such as foo.bar.baz.



Soar                     Last change:                           2






format-watch(n)           Soar Commands           format-watch(n)



     %v[*]
          print all values  of  all  attributes  on  the  current
          object.

     %o[args]
          same as %v, except that if the value is an  identifier,
          it  is  printed using the appropriate object trace for-
          mat.

     %av[args]
          same as %v, except the printed value is preceeded  with
          "^attr " to indicate the attribute name.

     %ao[args]
          a combination of the above two.

     %ifdef[_p_a_t_t_e_r_n]
          print the given _p_a_t_t_e_r_n  if  and  only  if  all  escape
          sequences inside it are "meaningful" or "well-defined."
          For example, the format string  %ifdef[foo  has  value:
          %v[foo]]  will print nothing if there is no ^foo on the
          current object.

     %nl  print a newline

     %%   print a percent sign

     %[   print a left bracket

     %]   print a right bracket


EXAMPLES
     In the following examples, the phrase "the command prints X"
     is  simply an abbreviation for the more accurate phrase "the
     command defines a trace format string which  when  used  for
     printing will print X".

     These commands are equivalent to the  default  settings  for
     stack traces:

          format-watch -stack -add s {%right[6,%dc]: %rsd[   ]==>S: %cs}
          format-watch -stack -add o {%right[6,%dc]: %rsd[   ]   O: %co}
9
     The above format strings print  the  decision  cycle  number
     right justified in a field 6 characters wide.  After that, a
     colon and space are printed.  Then, three spaces are printed
     as  many  times as the subgoal is deep.  Finally, a few more
     characters are printed to indicate the item  type  and  then
     the item itself is printed.

9


Soar                     Last change:                           3






format-watch(n)           Soar Commands           format-watch(n)



     The following commands are equivalent to  the  default  set-
     tings for object traces:

          format-watch -object -add * {%id %ifdef[(%v[name])]}
          format-watch -object -add s {%id %ifdef[(%v[attribute] %v[impasse])]}
          format-watch -object -add o evaluate-object {%id (evaluate-object %o[object])}
9
     The first command prints an identifier followed by its  name
     in parentheses (if a name is defined) for all objects.  This
     will hold unless overridden by more  specific  applicability
     conditions.   This  first format might print something like:
     O37 (my-operator-name).  The last two commands define (over-
     riding)  formats  for states and operators.  The second com-
     mand, for states, prints the state identifier  followed,  in
     parentheses,  by  its ^attribute and ^impasse attributes, if
     they are defined.  For example, this might print G5  (opera-
     tor   no-change).    Finally,   the  third  command  handles
     evaluate-object operators in  the  selection  space.   These
     operators will be printed as an id followed, in parentheses,
     by the string "evaluate-object " and the printed representa-
     tion of the object being printed.

     The following stack trace format  causes  both  the  current
     state  and current operator to be printed whenever an opera-
     tor is selected.  (There is a linefeed in the middle of  the
     format string.)

          format-watch -stack -add o {%right[6,%dc]: %rsd[   ]   S: %cs
                  %rsd[   ]   O: %co}
9
     The above format is  useful  for  watching  the  effects  of
     operator applications.


SEE ALSO
     watch, print


















Soar                     Last change:                           4



