###
### FILE          : mac3-planning.soar
###

###
### AUTHOR(3)     : John Laird          [ Soar 8.1 ]
### AUTHOR(2)     : Sayan Bhattacharyya [ Soar 7.0.3 ]
### AUTHOR(1)     : Aladin.Akyurek      [ Soar 5.1.1 ]
###

###
### CREATED(4)    : May 27, 2004
### CREATED(3)    : Aug 22, 1996
### CREATED(2)    : May 10, 1993
### CREATED(1)    : May 21, 1991
###

###
### ABSTRACT. This file provides a Soar system to solve 
### the missionaries and cannibals problem. Three missionaries and 
### three cannibals come to a river. There is a a boat on their side of 
### the river that can be used by either one or two persons at a time. 
### This boat must be used to cross the river in such a way that cannibals 
### never outnumber missionaries on either side of the river.
###

### This version has a more complex state representation than mac1 and
### mac2.soar
### Copying the states is simplier (only copy the holds),
### but operator application is more complex.

multi-attributes holds 3

learn -off
pushd ../default
source simple.soar
source selection.soar
popd

###
### MISSIONARIES-AND-CANNIBALS NAME
###
sp {mac*propose*initialize
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> + =)
   (<o> ^name initialize-mac)
}

sp {mac*apply*initialize
   (state <s> ^operator.name initialize-mac)
-->
   (<s> ^name mac
        ^holds <h1> <h2> <h3> <h4> 
		  ^boat <leftbank>
		  ^desired <d>)
	(<h1> ^type missionaries 
			^number 3
			^opposite <h3>
			^side <leftbank>)
	(<h2> ^type cannibals 
			^number 3
			^opposite <h4>
			^side <leftbank>)
	(<h3> ^type missionaries
			^number 0
			^opposite <h1>
			^side <rightbank>)
	(<h4> ^type cannibals 
			^number 0
			^opposite <h2>
			^side <rightbank>)
	(<leftbank> ^name leftbank
					^opposite-of <rightbank>)
	(<rightbank> ^name rightbank
					 ^opposite-of <leftbank>)
	}

###
### MISSIONARIES-AND-CANNIBALS PROBLEM SPACE
###

sp {mac*elaborate*problem-space
	(state <s> ^name mac)
	-->
	(<s> ^problem-space <p>)
	(<p> ^name missionaries-and-cannibals
		  ^default-state-copy yes
		  ^one-level-attributes boat
		  ^two-level-attributes holds)}

###
### MISSIONARIES-AND-CANNIBALS PROBLEM SPACE OPERATORS: 
### MOVE1, MOVE2, AND MOVE11
###

sp {mac*propose*operator*move1
	"Moves either a single missionary or a cannibal."
	(state <s> ^problem-space.name missionaries-and-cannibals
				  ^holds <h1> 
				  ^boat <f>)
	(<h1> ^number { <n> <> 0 }
			^side <f>)
	-->
	(<s> ^operator <o>)
	(<o> ^name move1
		  ^holds <h1>)}

sp {mac*propose*operator*move2
	"Moves either a single missionary or a cannibal."
	(state <s> ^problem-space.name missionaries-and-cannibals
				  ^holds <h1> 
				  ^boat <f>)
	(<h1> ^number > 1
			^side <f>)
	-->
	(<s> ^operator <o>)
	(<o> ^name move2
		  ^holds <h1>)}

sp {mac*propose*operator*move11
    "Moves either a single missionary or a cannibal."
    (state <s> ^problem-space.name missionaries-and-cannibals
               ^holds <h1> <h2>
               ^boat <f>)
    (<h1> ^type cannibals
          ^number { <n1> <> 0}
          ^side <f>)
    (<h2> ^type missionaries
          ^number { <n2> <> 0 }
          ^side <f>)
    -->
    (<s> ^operator <o>)
    (<o> ^name move11
         ^holds <h1> <h2>)}

###
### MOVE OPERATOR IMPLEMENTATION
###

sp {apply*move1
	(state <s> ^operator <o>)
	(<o> ^name << move1 move11 >>
		  ^holds <h1>)
	(<h1> ^number <r1> 
			^opposite <il>)
	(<il> ^number <l1>)
	-->
	(<h1> ^number <r1> -
			(- <r1> 1))
	(<il> ^number <l1> -
			(+ <l1> 1))}

sp {apply*move2
	(state <s> ^operator <o>)
	(<o> ^name move2
		  ^holds <h1>)
	(<h1> ^number <r1> 
			^opposite <h2>)
	(<h2> ^number <l1>)
	-->
	(<h1> ^number <r1> -
			(- <r1> 2))
	(<h2> ^number <l1> -
			(+ <l1> 2))}

sp {apply*move-boat
	(state <s> ^operator <o>
				  ^boat <x>)
	(<o> ^name << move1 move2 move11 >>
		  ^holds.side <x>)
	(<x> ^opposite-of <y>)
	-->
	(<s> ^boat <y> <x> -)}

sp {monitor*move1
	(state <s> ^operator <o>)
	(<o> ^name << move1 move11 >>
		  ^holds.type <m>)
	-->
	(write (crlf) | Move one | <m>)}

sp {monitor*move2
	(state <s> ^operator <o>)
	(<o> ^name move2
		  ^holds.type <m>)
	-->
	(write (crlf) | Move two | <m>)}

sp {monitor*move-side
	(state <s> ^operator <o>)
	(<o> ^name << move1 move2 move11 >>
		  ^holds.side <x>)
	(<x> ^opposite-of.name <side2> 
		  ^name <side1>)
	-->
	(write (crlf) | From | <side1> | to | <side2>)}

###
### MISSIONARIES-AND-CANNIBALS PROBLEM SPACE: 
### STATE EVALUATION
###

###
### EVALUATION: STATE FAILURE
###

sp {mac*evaluate*state*failure*more*cannibals
	(state <s> ^desired <d>
				  ^holds <h1> <h2>)
	(<h1> ^type missionaries
			^number { <n> > 0 }
			^side <loc>)
	(<h2> ^type cannibals
			^number > <n>
			^side <loc>)
	-->
	(<s> ^failure <d>)
      (write (crlf) |Failure - too many cannibals on side:| <loc>)}

sp {mac*evaluate*state*failure*state-no-change
	(state <s> ^desired <d>
				  ^problem-space.name missionaries-and-cannibals)
	(state <ss> ^superstate <s>
					^attribute state
					^quiescence t
					^impasse no-change)
	-->
	(<s> ^failure <d>)
      (write (crlf) |Failure - no operators can apply.|)}

sp {mac*evaluate*state*failure*detect-state-duplicate
	(state <s> ^holds <a1> <a2>
				  ^desired <d>)
	(<a1> ^type missionaries 
			^number 0
			^side <side>)
	(<a2> ^type cannibals
			^number 0
			^side <side>)
	(state { <> <s> <ss> } ^desired <d>
			^holds <b1> <b2>
			^tried-tied-operator)
	(<b1> ^type missionaries
			^number 0
			^side <side>)
	(<b2> ^type cannibals
			^number 0
			^side <side>)
  -(state <sss> ^superstate <ss>)
	-->
	(<ss> ^failure <d>)
      (write (crlf) |Failure - Duplicate State.|)}

###
### EVALUATION: STATE SUCCESS/GOAL TEST
###

 ## This also defines implicitly the desired state
 ## of the problem.
  #

sp {mac*detect*state*success
	(state <s> ^desired <d>
				  ^holds <h1> <h2>)
	(<h1> ^type missionaries 
			^number 3
			^side <loc>)
	(<h2> ^type cannibals 
			^number 3
			^side <loc>)
	(<loc> ^name rightbank)
	-->
	(<s> ^success <d>)
      (write (crlf) |Success.|)}
###
### MOVE-MAC-BOAT MONITOR OPERATOR AND STATE
###

sp {monitor*move-mac-boat
   (state <s> ^operator <o>)
   (<o> ^name move-mac-boat
        ^{ << cannibals missionaries >>  <type> } <number>)
   -->
   (write (crlf) | Move | <number> | | <type>)}

sp {monitor*state*left
   (state <s> ^name mac
              ^left-bank <l>
              ^right-bank <r>)
   (<l> ^missionaries <ml>
        ^cannibals <cl>
        ^boat 1)
   (<r> ^missionaries <mr>
        ^cannibals <cr>
        ^boat 0)
   -->
   (write (crlf) | M: | <ml> |, C: | <cl> | B ~~~   | 
                 | M: | <mr> |, C: | <cr> |  |)}

sp {monitor*state*right
   (state <s> ^name mac
              ^left-bank <l>
              ^right-bank <r>)
   (<l> ^missionaries <ml>
        ^cannibals <cl>
        ^boat 0)
   (<r> ^missionaries <mr>
        ^cannibals <cr>
        ^boat 1)
   -->
   (write (crlf) | M: | <ml> |, C: | <cl> |   ~~~ B | 
                 | M: | <mr> |, C: | <cr> |  |)}

