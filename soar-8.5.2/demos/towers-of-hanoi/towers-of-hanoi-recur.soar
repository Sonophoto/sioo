
###
### FILE          : tower-of-hanoi.soar
###

###
### ABSTRACT. This file provides a Soar system to solve the Tower 
### of Hanoi problems. This puzzle "involves three vertical pegs or 
### posts and a number of doughnut-like disks of graduated sizes that
### fit  on the pegs. At the outset, all the disks are arranged pyrami-
### dally on one of the pegs, say A, with the largest disk on the bottom. 
### The task is to move all of the disks to another peg, C, say, under 
### the constraints that (1) only one disk may be moved at a time, and 
### (2) a disk may never be placed on top of another smaller than itself. 
### Any number of disks may be used; the minimum number of moves for
### a solution is (2**n - 1), where n is the number of disks" (Simon, 
### 1975/1979, pp. 230-231).
###

### MEA Recursive Stratgey
###  Operators proposed to achieve current goal
###

### These help Soar reorder the conditions of rules

multi-attributes disk 3
multi-attributes peg 3
multi-attributes holds 4
multi-attributes upper-disk 2
multi-attributes clear 2

learn -off

###
###
### TOP GOAL: TOWER-OF-HANOI
###

sp {top-goal*elaborate*goal*tower-of-hanoi
    (state <s> ^superstate nil)
    -->
    (<s> ^name tower-of-hanoi)}


###
### INITIAL-STATE AND DESIRED-STATE
###

sp {tower-of-hanoi*propose*state*initial-and-desired-states
    "A 3-Disk Tower of Hanoi Problem." 
    (state <s> ^name tower-of-hanoi)
    -->
    (<s> ^disk <disk-1> <disk-2> <disk-3> <disk-4> <disk-5> <disk-6> <disk-7>
         ^peg <peg-a> <peg-b> <peg-c> 
         ^holds <h1> <h2> <h3> <h4> <h5> <h6> <h7>
         ^top-state <s>)
    (<h1> ^disk <disk-1> ^above <disk-2> ^on <peg-a>)     
    (<h2> ^disk <disk-2> ^above <disk-3> ^on <peg-a>)
    (<h3> ^disk <disk-3> ^above <disk-4> ^on <peg-a>)
    (<h4> ^disk <disk-4> ^above <disk-5> ^on <peg-a>)
    (<h5> ^disk <disk-5> ^above <disk-6> ^on <peg-a>)
    (<h6> ^disk <disk-6> ^above <disk-7> ^on <peg-a>)
    (<h7> ^disk <disk-7> ^above none ^on <peg-a>)
    (<disk-1> ^name 1 ^size 1) 
    (<disk-2> ^name 2 ^size 2)
    (<disk-3> ^name 3 ^size 3)
    (<disk-4> ^name 4 ^size 4)
    (<disk-5> ^name 5 ^size 5)
    (<disk-6> ^name 6 ^size 6)
    (<disk-7> ^name 7 ^size 7)
    (<peg-a> ^name |A|)
    (<peg-b> ^name |B|)
    (<peg-c> ^name |C|)
    (<s> ^desired <d>)
    (<d> ^holds <d1> <d2> <d3> <d4> <d5> <d6> <d7>)
    (<d1> ^disk <disk-1> ^above <disk-2> ^on <peg-c>)
    (<d2> ^disk <disk-2> ^above <disk-3> ^on <peg-c>)
    (<d3> ^disk <disk-3> ^above <disk-4> ^on <peg-c>)
    (<d4> ^disk <disk-4> ^above <disk-5> ^on <peg-c>)
    (<d5> ^disk <disk-5> ^above <disk-6> ^on <peg-c>)
    (<d6> ^disk <disk-6> ^above <disk-7> ^on <peg-c>)
    (<d7> ^disk <disk-7> ^above none ^on <peg-c>)}

###
### STATE ELABORATION/INFERENCES:
### LARGER, UPPER-DISK, AND
### CLEAR
###

sp {tower-of-hanoi*object*disk*elaborate*state*larger
    "If size-of(i) > size-of(j), then larger(i,j)."
    (state <s> ^name tower-of-hanoi
               ^disk <i-disk> { <> <i-disk> <j-disk> })
    (<i-disk> ^size <i-size>)
    (<j-disk> ^size <j-size> > <i-size>)
    -->
    (<j-disk> ^larger <i-disk>)}
    
sp {tower-of-hanoi*object*disk*elaborate*state*upper-disk
    "If not(above(x,disk)), then upper-disk(disk)."
    (state <s> ^name tower-of-hanoi
               ^disk <disk>)
   -{ (<s> ^holds.above <disk>) }
    -->
    (<s> ^upper-disk <disk>)}

sp {tower-of-hanoi*object*peg*elaborate*state*clear
    "If not(on(x,peg)), then clear(peg)."
    (state <s> ^name tower-of-hanoi
               ^peg <peg>)
   -{ (<s> ^holds.on <peg>) }
    -->
    (<s> ^clear <peg>)}

###
### OPERATOR PROPOSAL
###

## Desired is to have disk on a peg so propose operator to do it 
## Desired comes from original goal.

sp {tower-of-hanoi*propose*move-disk*mea*onpeg
    (state <s> ^desired <d>)
    (<d> ^holds <dh1>)
    (<dh1> ^disk <m-disk> 
           ^on <target-peg>
           ^satisfied *no*)
  -{(<d> ^holds <dh2>)
    (<dh2> ^disk <x-disk> 
           ^satisfied *no*)
    (<x-disk> ^larger <m-disk>)}
    -->
    (<s> ^operator <o>)
    (<o> ^name move-disk
         ^type put-on-peg
         ^disk <m-disk> 
         ^to <target-peg>)}

## Desired is to have disk clear (so it can move)
##  Propose moving disk above it

sp {tower-of-hanoi*propose*move-disk*mea*clear-disk
    (state <s> ^desired <d>
               ^top-state <ts>)
    (<ts> ^holds <h>
          ^peg { <> <peg1> <> <peg2> <target-peg> })
    (<h> ^disk <m-disk> 
         ^above <disk1>
         ^on <peg2>)
    (<d> ^move-disk <md>)
    (<md> ^disk <disk1>
          ^peg <peg1>)
    -->
    (<s> ^operator <o>)
    (<o> ^name move-disk
         ^type clear-disk
         ^disk <m-disk> 
         ^to <target-peg>)}

##
## Clear off smaller disk in the way of a larger disk

sp {tower-of-hanoi*propose*move-disk*mea*clear-smaller
    (state <s> ^desired <d>
               ^top-state <ts>)
    (<ts> ^holds <h1> <h2>
          ^peg { <> <disk1-target> <> <disk1-source> <target-peg> })
    (<h1> ^disk <m-disk>  
          ^on <disk1-target>)
    (<h2> ^disk <disk1> 
          ^on <disk1-source>)
    (<d> ^move-disk <md>)
    (<md> ^disk <disk1>
          ^peg <disk1-target>)
   (<disk1> ^larger <m-disk>)
 -{(<ts> ^holds <h3>)
   (<h3> ^disk <disk3> 
         ^on <disk1-target>)
   (<disk3> ^larger <m-disk>)
   (<disk1> ^larger <disk3>)}
    -->
    (<s> ^operator <o> +)
    (<o> ^name move-disk
         ^type clear-smaller
         ^disk <m-disk> 
         ^to <target-peg>)}

###
### SEARCH CONTROL
###  MAINTAIN OPERATOR IN GOAL STACK IF IT HAS BEEN SELECTED
###	     otherwise, new proposed operators would tie with it 

sp {tower-of-hanoi*select*maintain*operator
   (state <s> ^operator <o>)
   -->
   (<s> ^operator <o> >)}

###

sp {tower-of-hanoi*elaborate*desired*not-statisfied
    (state <s> ^name tower-of-hanoi
               ^desired <d>
               ^top-state <ts>)
  -{(<ts> ^holds <h>)
    (<h> ^disk <m-disk>
         ^on <target-peg>)}
    (<d> ^holds <dh>)
    (<dh> ^disk <m-disk> 
          ^on <target-peg>)
    -->
    (<dh> ^satisfied *no*)}

sp {tower-of-hanoi*elaborate*desired*statisfied
    (state <s> ^name tower-of-hanoi
               ^desired.holds <dh>
               ^top-state.holds <h>)
    (<h> ^disk <m-disk>
         ^on <target-peg>)
    (<dh> ^disk <m-disk> 
          ^on <target-peg>)
    -->
    (<dh> ^satisfied *yes*)}

###
### TOWER-OF-HANOI PROBLEM SPACE:
### OPERATOR APPLICATION
###

sp {apply*move-disk*source-clear*target-clear
    (state <s> ^operator <o>
               ^top-state <ts>)
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^to <target-peg>)
    (<ts> ^clear <target-peg>
          ^upper-disk <m-disk>
          ^holds <h>)
    (<h> ^disk <m-disk> 
         ^above none 
         ^on { <> <target-peg> <source-peg> })
    (<m-disk> ^name <m-disk-name>)
    (<target-peg> ^name <target-peg-name>)
    (<source-peg> ^name <source-peg-name>) 
    -->
    (write (crlf) |Move | <m-disk-name> | from | <source-peg-name> | to | <target-peg-name>)
    (<h> ^on <target-peg> <source-peg> - )}

sp {apply*move-disk*source-not-clear*target-clear
    (state <s> ^operator <o>
               ^top-state <ts>)
    (<ts> ^clear <target-peg> 
          ^upper-disk <m-disk>
          ^holds <h>)    
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^to <target-peg>)
    (<h> ^disk <m-disk> 
         ^above { <> none <adisk> } 
         ^on { <> <target-peg> <source-peg> })
    (<m-disk> ^name <m-disk-name>)
    (<target-peg> ^name <target-peg-name>)
    (<source-peg> ^name <source-peg-name>) 
    -->
    (write (crlf) |Move | <m-disk-name> | from | <source-peg-name> | to | <target-peg-name>)
    (<h> ^above none <adisk> - 
         ^on <target-peg> <source-peg> - )}

sp {apply*move-disk*target-not-clear
    (state <s> ^operator <o>
               ^top-state <ts>)
    (<ts> ^upper-disk <o-disk>
          ^upper-disk <m-disk>
          ^holds <h> { <> <h> <i> })
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^to <target-peg>)
    (<h> ^disk <m-disk> 
         ^above <adisk> 
         ^on { <> <target-peg> <source-peg> })
    (<i> ^disk <o-disk>
         ^on <target-peg>)
    (<o-disk> ^larger <m-disk>)
    (<m-disk> ^name <m-disk-name>)
    (<target-peg> ^name <target-peg-name>)
    (<source-peg> ^name <source-peg-name>) 
    -->
    (write (crlf) |Move | <m-disk-name> | from | <source-peg-name> | to | <target-peg-name>)
    (<h> ^above <o-disk> <adisk> - 
         ^on <target-peg> <source-peg> - )}

###
### TOWER-OF-HANOI: GOAL-TEST
###

sp {tower-of-hanoi*desired-of-disk*satisfied
    (state <s> ^holds <h1> <h2> <h3> <h4> <h5> <h6> <h7>)
    (<h1> ^disk <disk-1> ^on <peg-c>)     
    (<h2> ^disk <disk-2> ^on <peg-c>)
    (<h3> ^disk <disk-3> ^on <peg-c>)
    (<h4> ^disk <disk-4> ^on <peg-c>)
    (<h5> ^disk <disk-5> ^on <peg-c>)
    (<h6> ^disk <disk-6> ^on <peg-c>)
    (<h7> ^disk <disk-7> ^on <peg-c>)
    (<disk-1> ^name 1 ) 
    (<disk-2> ^name 2 )
    (<disk-3> ^name 3 )
    (<disk-4> ^name 4 )
    (<disk-5> ^name 5 )
    (<disk-6> ^name 6 )
    (<disk-7> ^name 7 )
    (<peg-c> ^name |C|)
    -->
    (write (crlf) |Success!|)
    (halt)}

### ELABORATIONS
sp {elaborate*state*top-state
    (state <s> ^superstate <ss>)
    (<ss> ^top-state <ts>)
    -->
    (<s> ^top-state <ts>)}

### CREATE DESIRED

sp {elaborate*state*desired
    (state <s> ^superstate <ss>)
    (<ss> ^operator <o>)
    (<o> ^disk <disk>
         ^to <peg>)
    -->
    (<s> ^desired.move-disk <md>)
    (<md> ^disk <disk>
          ^peg <peg>)}
    
sp {tower-of-hanoi*monitor*operator-execution*move-disk
    (state <s> ^operator <o>)
    (<o> ^name move-disk
         ^disk.size <size>
         ^to.name <to-name>)
    -->
    (write (crlf) 
           | Goal Move Disk:| <size>
           | to peg | <to-name>)}

### eof of tower-of-hanoi.soar

