
###
### FILE          : tower-of-hanoi8.soar
###

###
### ABSTRACT. This file provides a Soar system to solve the Tower 
### of Hanoi problems. This puzzle "involves three vertical pegs or 
### posts and a number of doughnut-like disks of graduated sizes that
### fit  on the pegs. At the outset, all the disks are arranged pyrami-
### dally on one of the pegs, say A, with the largest disk on the bottom. 
### The task is to move all of the disks to another peg, C, say, under 
### the constraints that (1) only one disk may be moved at a time, and 
### (2) a disk may never be placed on top of another smaller than itself. 
### Any number of disks may be used; the minimum number of moves for
### a solution is (2**n - 1), where n is the number of disks" (Simon, 
### 1975/1979, pp. 230-231).
###

### This version uses search control rules to solve the TOH in the
### minimum number of moves.
### The search control is as follows:
### Always alternate between moving the smallest disk and
### the other exposed disk that can move.  
###  Move the exposed disk to the one place it can move (the other disk
###  that is bigger than it or an empty peg).  
###  Move the smallest disk to the peg it was not at last.
###   This requires remembering the last peg the smallest disk was on,
###    and initializing this to the appropriate peg (the destination peg
###    if there is an even number of disks, and the other peg if there is
###    an odd number of disks).


### These declaration help Soar reorder the conditions of the rules
multi-attributes operator 2
multi-attributes disk 7
multi-attributes peg 4
multi-attributes holds 10
#multi-attributes upper-disk 
multi-attributes clear 3

learn -off

###
###
### TOP GOAL: 
### TOWER-OF-HANOI
###

sp {top-goal*elaborate*goal*tower-of-hanoi
    (state <s> ^superstate nil)
    -->
    (<s> ^name tower-of-hanoi)}

###
### TOWER-OF-HANOI:
### INITIAL-STATE AND DESIRED-STATE
###

sp {tower-of-hanoi*propose*state*initial-and-desired-states
    "A 3-Disk Tower of Hanoi Problem." 
    (state <s> ^name tower-of-hanoi)
    -->
    (<s> ^disk <disk-1> <disk-2> <disk-3> <disk-4> <disk-5> <disk-6> <disk-7>
          <disk-8> <disk-9> <disk-10> <disk-11>
         ^peg <peg-a> <peg-b> <peg-c> 
         ^holds <h1> <h2> <h3> <h4> <h5> <h6> <h7> <h8> <h9> <h10> <h11>
         ^last-disk1-peg <peg-b> ;# peg-b if odd number of disks, peg-c if even
         ^last-disk-moved <disk-2>
         ^clear <peg-b> <peg-c>
         ^upper-disk <disk-1>)
    (<h1> ^disk <disk-1> ^above <disk-2> ^on <peg-a>)     
    (<h2> ^disk <disk-2> ^above <disk-3> ^on <peg-a>)
    (<h3> ^disk <disk-3> ^above <disk-4> ^on <peg-a>)
    (<h4> ^disk <disk-4> ^above <disk-5> ^on <peg-a>)
    (<h5> ^disk <disk-5> ^above <disk-6> ^on <peg-a>)
    (<h6> ^disk <disk-6> ^above <disk-7> ^on <peg-a>)
    (<h7> ^disk <disk-7> ^above <disk-8> ^on <peg-a>)
    (<h8> ^disk <disk-8> ^above <disk-9> ^on <peg-a>)
    (<h9> ^disk <disk-9> ^above <disk-10> ^on <peg-a>)
    (<h10> ^disk <disk-10> ^above <disk-11> ^on <peg-a>)
    (<h11> ^disk <disk-11> ^above none ^on <peg-a>)
    (<disk-1> ^name 1 ^size 1) 
    (<disk-2> ^name 2 ^size 2)
    (<disk-3> ^name 3 ^size 3)
    (<disk-4> ^name 4 ^size 4)
    (<disk-5> ^name 5 ^size 5)
    (<disk-6> ^name 6 ^size 6)
    (<disk-7> ^name 7 ^size 7)
    (<disk-8> ^name 8 ^size 8)
    (<disk-9> ^name 9 ^size 9)
    (<disk-10> ^name 10 ^size 10)
    (<disk-11> ^name 11 ^size 11)
    (<peg-a> ^name |A|)
    (<peg-b> ^name |B|)
    (<peg-c> ^name |C|)
    (<s> ^desired <d1> <d2> <d3> <d4> <d5> <d6> <d7> <d8> <d9> <d10> <d11>)
    (<d1> ^disk <disk-1> ^above <disk-2> ^on <peg-c>)
    (<d2> ^disk <disk-2> ^above <disk-3> ^on <peg-c>)
    (<d3> ^disk <disk-3> ^above <disk-4> ^on <peg-c>)
    (<d4> ^disk <disk-4> ^above <disk-5> ^on <peg-c>)
    (<d5> ^disk <disk-5> ^above <disk-6> ^on <peg-c>)
    (<d6> ^disk <disk-6> ^above <disk-7> ^on <peg-c>)
    (<d7> ^disk <disk-7> ^above <disk-8> ^on <peg-c>)
    (<d8> ^disk <disk-8> ^above <disk-9> ^on <peg-c>)
    (<d9> ^disk <disk-9> ^above <disk-10> ^on <peg-c>)
    (<d10> ^disk <disk-10> ^above <disk-11> ^on <peg-c>)
    (<d11> ^disk <disk-11> ^above none ^on <peg-c>)}

###
### STATE ELABORATION/INFERENCES:
### LARGER, UPPER-DISK, AND CLEAR
###  These are relations and properties used by other rules

sp {tower-of-hanoi*object*disk*elaborate*state*larger
    "If size-of(i) > size-of(j), then larger(i,j)."
    (state <s> ^name tower-of-hanoi
               ^disk <i-disk> { <> <i-disk> <j-disk> })
    (<i-disk> ^size <i-size>)
    (<j-disk> ^size <j-size> > <i-size>)
    -->
    (<j-disk> ^larger <i-disk>)}

###
### PROPOSE OPERATORS TO MOVE DISKS
###

sp {tower-of-hanoi*propose*move-disk*disk-to-move*onto
    "Target peg is clear."
    (state <s> ^name tower-of-hanoi
               ^upper-disk <m-disk>
               ^clear { <> <last-peg> <target-peg> }
    	         ^holds <h>
               ^last-disk1-peg <last-peg>
               ^last-disk-moved.name <> 1)
     (<m-disk> ^name 1)
     (<h> ^disk <m-disk> 
          ^on <source-peg>)
    -->
    (<s> ^operator <o>)
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg> 
         ^to <target-peg>)}

sp {tower-of-hanoi*propose*move-disk*disk-to-move*above
    "Upper disk on the target peg is larger."
    (state <s> ^name tower-of-hanoi)
    (<s> ^upper-disk <m-disk> { <> <m-disk> <o-disk> }
         ^holds <h> { <> <h> <i> }
         ^last-disk1-peg <last-peg>
         ^last-disk-moved.name <> 1) 	 
    (<h> ^disk <m-disk> 
         ^on <source-peg>)
    (<i> ^disk <o-disk> 
         ^on { <> <last-peg> <target-peg> })
    (<o-disk> ^larger <m-disk>)
    (<m-disk> ^name 1)
    -->
    (<s> ^operator <o>)
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg> 
         ^to <target-peg>)}

sp {tower-of-hanoi*propose*move-disk*disk-to-move*onto2
    "Target peg is clear."
    (state <s> ^name tower-of-hanoi
               ^upper-disk <m-disk> 
               ^clear <target-peg>
    	         ^holds <h>
               ^last-disk-moved.name 1)	 
     (<h> ^disk <m-disk> 
         ^on <source-peg>)
    (<m-disk> ^name <> 1)
    -->
    (<s> ^operator <o>)
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg> 
         ^to <target-peg>)}

sp {tower-of-hanoi*propose*move-disk*disk-to-move*above2
    "Upper disk on the target peg is larger."
    (state <s> ^name tower-of-hanoi)
    (<s> ^upper-disk <m-disk> { <> <m-disk> <o-disk> }
         ^holds <h> { <> <h> <i> }
         ^last-disk-moved.name 1) 	 
    (<h> ^disk <m-disk> 
         ^on <source-peg>)
    (<i> ^disk <o-disk> 
         ^on <target-peg>)
    (<o-disk> ^larger <m-disk>)
    (<m-disk> ^name <> 1)
    -->
    (<s> ^operator <o>)
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg> 
         ^to <target-peg>)}


###
### OPERATOR APPLICATION
###

sp {apply*move-disk*source-clear*target-clear
    (state <s> ^operator <o>
               ^clear <target-peg>
               ^holds <h>)
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg> 
         ^to <target-peg>)
    (<h> ^disk <m-disk> 
         ^above none 
         ^on <source-peg>)
    -->
    (<h> ^on <target-peg> <source-peg> -)
    (<s> ^clear <target-peg> -)}

sp {apply*move-disk*source-not-clear*target-clear
    (state <s> ^operator <o>
               ^clear <target-peg> 
               ^holds <h>)    
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg> 
         ^to <target-peg>)
    (<h> ^disk <m-disk> 
         ^above { <> none <adisk> } 
         ^on <source-peg>)
    -->
    (<s> ^clear <target-peg> -)
    (<h> ^above none <adisk> - 
         ^on <target-peg> <source-peg> - )}

sp {apply*move-disk*target-not-clear
    (state <s> ^operator <o>
               ^upper-disk <o-disk>
               ^holds <h> { <> <h> <i> })
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg> 
         ^to <target-peg>)
    (<h> ^disk <m-disk> 
         ^above <adisk> 
         ^on <source-peg>)
    (<i> ^disk <o-disk>
         ^on <target-peg>)
    -->
    (<s> ^upper-disk <o-disk> -)
    (<h> ^above <o-disk> <adisk> - 
         ^on <target-peg> <source-peg> - )}

sp {apply*move-disk*add-clear-source
    (state <s> ^operator <o>
               ^holds <h>)
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg>)
    (<h> ^disk <m-disk> 
         ^above none 
         ^on <source-peg>)
    -->
    (<s> ^clear <source-peg>)}

sp {apply*move-disk*add*upper-disk*source
    (state <s> ^operator <o>
               ^holds <h>)    
    (<o> ^name move-disk
         ^disk <m-disk> 
         ^from <source-peg>)
    (<h> ^disk <m-disk> 
         ^above { <> none <adisk> } 
         ^on <source-peg>)
    -->
    (<s> ^upper-disk <adisk>)}

### Maintain last-disk-moved

sp {apply*move-disk*record*last-disk-moved
    (state <s> ^operator <o>)
    (<o> ^name move-disk
         ^disk <m-disk>)
    -->
    (<s> ^last-disk-moved <m-disk>)}

sp {apply*move-disk*remove*last-disk-moved
    (state <s> ^operator <o>
               ^last-disk-moved <old-disk>)
    (<o> ^name move-disk
         ^disk <> <old-disk>)
    -->
    (<s> ^last-disk-moved <old-disk> -)}

### Maintain last peg disk 1 was moved to

sp {apply*move-disk*record*last-disk1-peg
    (state <s> ^operator <o>)
    (<o> ^name move-disk
         ^disk.name 1
         ^from <peg>)
    -->
    (<s> ^last-disk1-peg <peg>)}

sp {apply*move-disk*remove*last-disk1-peg
    (state <s> ^operator <o>
               ^last-disk1-peg <old-peg>)
    (<o> ^name move-disk
         ^disk.name 1
         ^from <> <old-peg>)
    -->
    (<s> ^last-disk1-peg <old-peg> -)}

###
### TOWER-OF-HANOI GOAL-TEST
###

sp {tower-of-hanoi*desired-of-disk*satisfied
    (state <s> ^holds <h1> <h2> <h3> <h4> <h5> <h6> <h7> <h8> <h9> <h10> <h11>)
    (<h1> ^disk <disk-1> ^on <peg-c>)     
    (<h2> ^disk <disk-2> ^on <peg-c>)
    (<h3> ^disk <disk-3> ^on <peg-c>)
    (<h4> ^disk <disk-4> ^on <peg-c>)
    (<h5> ^disk <disk-5> ^on <peg-c>)
    (<h6> ^disk <disk-6> ^on <peg-c>)
    (<h7> ^disk <disk-7> ^on <peg-c>)
    (<h8> ^disk <disk-8> ^on <peg-c>)
    (<h9> ^disk <disk-9> ^on <peg-c>)
    (<h10> ^disk <disk-10> ^on <peg-c>)
    (<h11> ^disk <disk-11> ^on <peg-c>)
    (<disk-1> ^name 1 ) 
    (<disk-2> ^name 2 )
    (<disk-3> ^name 3 )
    (<disk-4> ^name 4 )
    (<disk-5> ^name 5 )
    (<disk-6> ^name 6 )
    (<disk-7> ^name 7 )
    (<disk-8> ^name 8)
    (<disk-9> ^name 9)
    (<disk-10> ^name 10)
    (<disk-11> ^name 11)
    (<peg-c> ^name |C|)
    -->
    (write (crlf) |Success!|)
    (halt)}

###
### TOWER-OF-HANOI MONITOR
###
    
sp {tower-of-hanoi*monitor*operator-execution*move-disk
    (state <s> ^operator <o>)
   (<o> ^name move-disk
         ^disk.size <size>
         ^to.name <to-name>)
    -->
    (write (crlf) 
           | Move Disk:| <size>
           | to peg | <to-name>)}

excise tower-of-hanoi*monitor*operator-execution*move-disk
### eof of tower-of-hanoi.soar

