## -*- Mode: sde -*-
##
############################# -*- Mode: Soar -*- #############################
## 
## File            : default/simple.soar
## Author          : John Laird
## Created on      : Mon Feb 27 16:15:34 1989  
## Last Modified By: John Laird 
## Last Modified On: Friday December 11, 1998
## 
## Contents:     Simple Default productions for Soar 8.1
##
###############################################################################
##
## Significant Changes made to Convert to Soar 8.1
##
###
###
###		7.1	Default knowledge for the top context
###

## Elaborate the top goal with name top-goal and top-state.
##  both are required for backward compatibility
## Make it worst so it will be overridden by all other names.

sp {default*top-state*elaborate*state*name*top-state*top-goal
    "Propose top-goal as name of top goal."
    :default
    (state <s> ^superstate nil)
    -->
    (<s> ^name top-goal
         ^name top-state)}

## Elaborate every substate with io pointer.

sp {default*elaborate*state*io
   "Elaborate each substate with io pointer."
   :default
   (state <s> ^impasse no-change
              ^superstate.io <io>)
   -->
   (<s> ^io <io>)}

## Elaborate every substate with world-state pointer if it exists on the top state

sp {default*elaborate*state*world-state
   "Elaborate substates with world-state."
   :default
   (state <s> ^impasse no-change
              ^superstate.world-state <ws>)
   -->
   (<s> ^world-state <ws>)}

sp {default*copy*world*state
   :default
    (state <s> ^world-state <ts>
               ^impasse no-change
               ^attribute operator)  
    -->
    (<s> ^world-state <ts>)}


## Elaborate a state with the name of the superoperator

sp {elaborate*state*operator*name
   "Elaborate substates with name of operator."
   :default
   (state <s> ^superstate.operator.name <name>)
-->
   (<s> ^name <name>)}

### Propose wait for a state no-change

sp {top-ps*propose*wait
   "Propose wait if there is a state no-change."
   :default
   (state <s> ^attribute state
              ^choices none
             -^operator.name wait)
-->
   (<s> ^operator <o> + <)
   (<o> ^name wait)}

### This avoids a operator no-change after wait is selected
### I've included it just to keep the trace simple - it never fires

sp {top-ps*apply*wait*random
   "Fake production just to avoid extra operator no-change."
   :default
   (state <s> ^operator <o>)
   (<o> ^name wait)
-->
   (<o> ^random elaboration)}

sp {default*top-goal*halt*operator*failure
   "Halt if no operator can be selected for the top goal."
   :default
   (state <s> ^superstate nil)
   (state <ss> ^impasse constraint-failure ^superstate <s>)
   -->
   (write (crlf) |No operator can be selected for top goal.| )
   (write (crlf) |Soar must halt.| )
   (halt)}

sp {default*select*indifferent-and-worst*tied
   "Indifferent an object if it leads to a tie that can not be solved."
   :default
   (state <s1> ^operator <o> +)
   (state <s2> ^superstate <s1>
	         ^item <o>
	         ^quiescence t)
   (state <s3> ^attribute state
	         ^choices none
	         ^superstate <s2>
	         ^quiescence t)
   -->
   (<s1> ^operator <o> =, < )}

### If the problem space for handling the subgoal fails, signified by 
### the choices none impasse below it, make a reject-preference for each 
### conflicted object.

sp {default*select*reject-and-reconsider*conflict
   "Reject an object if it leads to a conflict that can not be solved."
   :default
   (state <s1> ^operator <o> +)
   (state <s2> ^impasse conflict
	         ^attribute operator
	         ^superstate <s1>
	         ^item <o>
	         ^quiescence t)
   (state <s3> ^attribute state
	         ^choices none
	         ^superstate <s2>
	         ^quiescence t)
   -->
   (<s1> ^operator <o> -)}





	


