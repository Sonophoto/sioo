'\"
'\" Soar man page 
'\"
.so man.macros
.HS learn soar
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
learn \- Control the learning of productions
.SH SYNOPSIS
\fBlearn\fR [\fI-on\fR | \fI-off\fR | \fI-except\fR | \fI-only\fR | \fI-list\fR | \fI-all-levels\fR | \fI-bottom-up\fR]
.BE

.SH DESCRIPTION
.PP
This command is used to control the learning (or "chunking") of productions.  
With no arguments, this command prints out the current learning 
environment status.  The \fBwatch\fR command can be used to
provide various levels of detail when productions are learned.

Learning is on by default.

.SH OPTIONS

Any \fIoption\fRs given must match one of the following keywords:
.TP
\fB-on\fR
turn learning on
.TP
\fB-off\fR
turn all learning off
.TP 
\fB-except\fR
learning is on, except as specified by RHS \fBdont-learn\fR actions
.TP
\fb-only\fR
learning is off, except as specified by RHS \fBforce-learn\fR actions
.TP
\fb-list\fR
lists the force-learn and dont-learn states registered by the RHS actions

.TP
\fB-all-levels\fR
when learning is on, this allows learning whenever
a subgoal returns a result (in contrast to bottom-up learning)
.TP
\fB-bottom-up\fR
when learning is on, this allows learning at only 
the lowest level; i.e., build chunks only for subgoals that have
not yet had any subgoals with chunks built.



.SH SEE ALSO
\fBwatch\fR, \fBexplain-backtraces\fR, \fBsave_backtraces\fR
