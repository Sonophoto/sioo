{"name":"Sioo","tagline":"Embeddable Cognitive Architecture based on Soar 8.5.2","body":"# sioo\r\n\r\n## SIOO is an acronym for State Input Operator Output\r\n\r\nSIOO is an embeddable cognitive architecture based on Soar 8.5.2\r\nand includes that kernel and a handful of other files from the \r\n8.5.2 version of SoarSuite.\r\n\r\n#### This code uses the GNU Compiler Collection (GCC)\r\n\r\n#### All Tcl code has been removed from the source tree. Sorry.\r\n#### All WINDOWS and WIN32 code has been removed. Sorry.\r\n#### ALL MACINTOSH code has been removed. Sorry.\r\n#### All HP-UX code has been removed. Sorry.\r\n\r\n**This is alpha code and is just now coming together.**\r\n\r\nThis code is NOT for beginners at all and is intended for\r\nexperts with the C language, *nix tools, and production rules\r\nthere is no support here other than the source code. You will\r\nneed to use gdb or ddd to do debugging...\r\n\r\n**To build it, change to the root of wherever you put the code**\r\n**and try**\r\n\r\n`./make-sioo`\r\n\r\nThis is a simple sh script that manages the process, it will \r\nbuild the kernel, headers and the cli interface and\r\ndump it all into the out directory. There is no install yet.\r\nNote that at this time the kernel is built with an autotools\r\n`./configure && make` process but the cli is built with a \r\nhand-rolled make file.\r\n\r\n**Demos:**\r\n\r\n_note that the demo codes counter-demo and toh-demo must be _\r\n_run from the cli directory by calling sioo while you are_\r\n_in that directory --> but they do work_\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}