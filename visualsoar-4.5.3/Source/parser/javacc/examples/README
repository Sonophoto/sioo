This directory contains many examples of JavaCC and JJTree input grammars.
We recommend you see the examples in the following order.  Each directory
contains a README file with more detailed instructions:

SimpleExamples:
	This is a set of very simple JavaCC examples.  After trying these
	examples out, you should be able to build reasonably complex
	examples yourself.

SimpleCalculators:
	This set of examples are still somewhat simple.  These were
	contributed by Chuck McManis and were produced as part of his
	article on JavaCC for JavaWorld.

MailProcessing:
	These examples illustrate the use of JavaCC in parsing emacs
	mail files.  They highlight the use of lexical states.

JJTreeExamples:
	There are simple input grammars for JJTree, the tree building
	preprocessor.

CORBA-IDL:
	This is a grammar for the IDL interface definition language of
	OMG CORBA 2.0.

DU:
	A simple example that illustrates the use of JavaCC with the UNIX
	utility DU (contributed by John D. Ramsdell).

JavaGrammars:
	This directory contains extremely well debugged and maintained
	Java grammars for both the 1.0.2 and 1.1 versions of the
	language.

JavaCCGrammar:
	This directory contains the official JavaCC/JJTree grammar.  This
	is the grammar based on which JavaCC and JJTree are build.

Transformer:
	This example illustrates how a Java language extension is defined
	and transformed back into Java.  This makes use of JJTree.

GUIParsing:
	These examples illustrate how one may obtain input for parsing
	or lexical analysis from a GUI, and thereby provide "parsing"
	of GUI interactions.  In addition, one of these examples
	illustrates how state machines may be described as lexical
	specifications.

Obfuscator:
	This is a complete implementation of a Java obfuscator.  This
	allows one to take a set of Java source files and modify them
	into semantically equivalent source files that are much more
	difficult to read.  This example shows the usage of multiple
	parsers used from one system.

Interpreter:
	This is an interpreter for a simple language with declarations,
	assignments, expressions, conditionals, loops, etc.  It
	demonstrates really nicely a complex example where JJTree is
	used to drastically simplify the process of generating parse
	trees.  All actions are really methods built into the generated
	tree nodes.

Lookahead:
	This directory contains the tutorial on LOOKAHEAD along with all
	examples used in the tutorial.

HTMLGrammars:
	Contains a couple of grammars for HTML.

CandCPLUSPLUS:
	Contains grammars for C and C++.

JavaScope:
	This example shows how you can use the JavaScope coverage
	checker with JavaCC.  It uses the Obfuscator example, but builds
	it slightly differently (to enable coverage checking).

VHDL:
	This is a VHDL grammar contributed by Christoph Grimm.  Please
	read the README file in the VHDL directory for more information.

VTransformer:
	This directory contains an example of using the Visitor design
	pattern with JJTree.  Like the Transformer example, it shows how
	a Java program can be processed into a slightly different form.
