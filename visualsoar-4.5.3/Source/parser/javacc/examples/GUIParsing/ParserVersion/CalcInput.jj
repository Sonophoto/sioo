options {
  USER_TOKEN_MANAGER = true;
}

PARSER_BEGIN(CalcInputParser)

public class CalcInputParser {
}

PARSER_END(CalcInputParser)

void Input() :
	{
	  double larg = 0.0;
	  double rarg;
	}
{
  ( 
    [
      larg=Number() 
	{
	  CalcGUI.print(larg);
	}
    ]
    (
      <ADD>
      rarg=Number()
	{
	  larg = larg + rarg;
	  CalcGUI.print(larg);
	}
    |
      <SUB>
      rarg=Number()
	{
	  larg = larg - rarg;
	  CalcGUI.print(larg);
	}
    |
      <MUL>
      rarg=Number()
	{
	  larg = larg * rarg;
	  CalcGUI.print(larg);
	}
    |
      <DIV>
      rarg=Number()
	{
	  larg = (rarg==0) ? Float.POSITIVE_INFINITY : (larg / rarg);
	  CalcGUI.print(larg);
	}
    )*
    <EQ: "=" >
  )*
}

double Number() :
	{
	  Token t;
	  String image = "";
	  double value = 0.0;
	  double decimalPlace = 1.0;
	}
{
  (
    t=<DIGIT>
	{
	  image += t.image;
	  value = value*10 + Integer.parseInt(t.image);
	  CalcGUI.print(image);
	}
  )+
  [
    <DOT>
	{
	  image += ".";
	  CalcGUI.print(image);
	}
    (
      t=<DIGIT>
	{
	  image += t.image;
	  decimalPlace *= 0.1;
	  value = value + Integer.parseInt(t.image)*decimalPlace;
	  CalcGUI.print(image);
	}
    )+
  ]
	{
	  return value;
	}
|
  <DOT>
	{
	  image = "0.";
	  CalcGUI.print(image);
	}
  (
    t=<DIGIT>
	{
	  image += t.image;
	  decimalPlace *= 0.1;
	  value = value + Integer.parseInt(t.image)*decimalPlace;
	  CalcGUI.print(image);
	}
  )+
	{
	  return value;
	}
}
