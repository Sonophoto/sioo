This version of the GUI parsing example defines the GUI interaction as
a JavaCC grammar using tokens that are generated by a user built token
manager.  Note that these tokens appear in the parser (CalcInput.jj)
without definitions (such as <DIGIT>, <DOT>, etc.).  JavaCC does not
require token definitions when USER_TOKEN_MANAGER is set to true.  The
token manager is implemented in TokenCollector.java to extract tokens
from a producer-consumer object in ProducerConsumer.java.  The tokens
are stuffed into ProducerConsumer.java by the GUI which is defined in
CalcGUI.java.  The whole system is invoked through Main.java.

The point of this example is to illustrate:

. How a parser can be used without the standard token manager.
. The fact that tokens can be generated by entities that are not even
  streams (a GUI in this example).
. That GUI interaction can be modeled as a grammar and this grammar
  can then be used to implement the innards of a GUI based tool.

To run the calculator (which is what this example implements), do:

	javacc CalcInput.jj
	javac *.java
	java Main
