# Generated automatically from Makefile.in by configure.
#
# Makefile.in for Soar kernel of Soar 8.4
#
# This makefile template is in two sections.  The first specifies 
# a set of variables whose values are defined by the configure 
# script.  The values found by that script are substituted in the 
# placeholders which are indicated by the @...@ sequences (e.g., 
# gcc for the C compiler).  This template file is used to 
# generate "Makefile" after performing the indicated substitutions.
# [If you are trying to compile this on a non-Unix system, then you
# can make the relevant substitutions without using the configure 
# program.]  The configure script is generated by the GNU autoconf 
# utility.
#
# The second part of this makefile defines the rules for building
# the Soar kernel.
#
#-----------------------------------------------------------------
#
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#
#=================================================================
#
# VARIABLES SET BY CONFIGURE
#
# This section of switches is defined by substitution from the
# configure script.  If you are building Soar on a non-Unix
# platform, then substitute the desired switch settings for the
# @...@ placeholders.
#
# The comments for each switch are retained here to clarify their 
# meanings. The example switch settings are for a sun4 w/ gcc 
# compiler.

# Set this to your favorite C Compiler that understands ANSI.
#
# CC = gcc

CC = gcc 

# Set these to be whatever flags you want to pass to your compiler.
# If the flags define ANSI C behavior, be sure to set them.
CFLAGS = -g -w -Wall -ansi -fpcc-struct-return

# Select desired debugging and option flags.  These include:
#
# -DUSE_TCL             -- build Tcl/Tk version.
# -DUNIX                -- compiling on UNIX system.
# -DUSE_X_DISPLAY       -- use X interface to multiple agents.  Use
#                          only if -DMULTI_AGENT_ENABLED selected
#                          and -DUSE_TCL NOT selected.
#
# If you don't select USE_X_DISPLAY then standard I/O will be used.
# in the soar6 binary.
#
# DFLAGS = -DUSE_TCL -DUNIX

DFLAGS = -DUNIX   -DHAVE_DIRENT_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DHAVE_LIMITS_H=1 -DTIME_WITH_SYS_TIME=1 -DRETSIGTYPE=void -DHAVE_GETHOSTNAME=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_GETWD=1 -DHAVE_STRTOL=1 -DHAVE_STRTOUL=1 -DPOSIX_C_SOURCE=199506L 

# Library entry randomizer.  Not needed if using certain new 
# versions of ar.
#
# RANLIB = ranlib 

RANLIB = ranlib

#=================================================================
#
# OTHER VARIABLES
#
# SGI's make, among others, use the SHELL variable to decide
# what shell to use when executing commands in a Makefile.  The
# commands below assume the Bourne shell, sh.

SHELL = /bin/sh

# set this to the AR flags as appropriate for your system

AR       = ar
ARFLAGS  = r


# This contains the list of all object files in the soar library



#=================================================================
#
# LIBRARIES
#

OBJS =	agent.o\
	backtrace.o\
	callback.o\
	chunk.o\
	consistency.o\
	decide.o\
	explain.o\
	init_soar.o\
	io.o\
	lexer.o\
	mem.o\
	osupport.o\
	parser.o\
	prefmem.o\
	print.o\
	production.o\
	recmem.o\
	reorder.o\
	rete.o\
	rhsfun.o\
	rhsfun_examples.o\
	rhsfun_math.o\
	symtab.o\
	tempmem.o\
	trace.o\
	wmem.o\
	debugutil.o\
	scheduler.o\
	timers.o\
	soarapi.o\
	soar_core_api.o\
	soar_core_utils.o\
	soarapi_datatypes.o\
	soar_ecore_api.o\
	soar_ecore_utils.o\
	soarapiUtils.o\
	soarapiCallbacks.o\
	soarBuildInfo.o\
	sysdep.o

#=================================================================
#
# PRIMARY TARGETS:
#
# Pick the latter option if you wish to link with soar code via a library.

all:  lib
devel: soarBuildInfo lib
version: soarBuildOptions soarBuildInfo lib

soarBuildInfo: soarBuildInfo.tmp
	./make-soar-build-info 


soarBuildOptions: soarBuildOptions.tmp
	./make-soar-build-options

docs: soarBuildInfo
	doxygen	


lib: libsoarkernel.a 

# The IBM RS/6000 C compiler doesn't handle the -o switch properly:
# it ignores the path and uses only the filename component.  Hence,
# to make compiles portable across a wider set of platforms, we
# compile in the current directory and move the resulting object
# or executable file to its intended destination.


libsoarkernel.a: ${OBJS}
	${AR} ${ARFLAGS} libsoarkernel.a ${OBJS}
	${RANLIB} libsoarkernel.a



#=================================================================
#
# C FILES
#
# How we compile a file:
COMPILE.c = ${CC} ${CFLAGS} ${DFLAGS} ${IFLAGS} -c

# The dependencies of objects on sources/headers:
# (The targets were explicitly listed because make was broken
# under CMU's Mach OS.  However, since users should be using
# GNU gmake under Mach, perhaps this can be shorted using
# file extension rules now?  We need to check if other makes
# are broken in this way before converting to the more
# consise method.)
agent.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h scheduler.h
backtrace.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h explain.h
callback.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
callback.o: soar_core_api.h soarapi_datatypes.h
chunk.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
chunk.o: soar_core_utils.h soar_core_api.h soarapi_datatypes.h
chunk.o: soar_ecore_utils.h explain.h
consistency.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
debugutil.o: debugutil.h soarkernel.h soarBuildOptions.h sysdep.h callback.h
decide.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
decide.o: soarapi_datatypes.h
explain.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h explain.h
init_soar.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
io.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h soarapiUtils.h
io.o: soarapi.h soar_core_api.h soarapi_datatypes.h soar_ecore_api.h
io.o: soar_ecore_utils.h soar_core_utils.h
legacy.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h soar_core_api.h
legacy.o: soarapi_datatypes.h
lexer.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
mem.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
osupport.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
parser.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
prefmem.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
print.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
production.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
recmem.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
reorder.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
rete.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h rete.h
rhsfun.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h rhsfun_math.h
rhsfun.o: rhsfun.h
rhsfun_math.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
scheduler.o: scheduler.h soarkernel.h soarBuildOptions.h sysdep.h callback.h
soarBuildInfo.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
soarBuildInfo.o: soar_ecore_api.h soar_ecore_utils.h soar_core_utils.h
soarBuildInfo.o: soar_core_api.h soarapi_datatypes.h
soar_core_api.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
soar_core_api.o: soar_core_api.h soarapi_datatypes.h soar_core_utils.h
soar_core_api.o: soar_ecore_utils.h scheduler.h
soar_core_utils.o: soar_core_utils.h soarkernel.h soarBuildOptions.h sysdep.h
soar_core_utils.o: callback.h soar_core_api.h soarapi_datatypes.h
soar_core_utils.o: soar_ecore_utils.h rhsfun.h
soar_ecore_api.o: soar_ecore_api.h soarkernel.h soarBuildOptions.h sysdep.h
soar_ecore_api.o: callback.h soar_ecore_utils.h soar_core_utils.h
soar_ecore_api.o: soar_core_api.h soarapi_datatypes.h rete.h
soar_ecore_utils.o: soar_ecore_utils.h soarkernel.h soarBuildOptions.h
soar_ecore_utils.o: sysdep.h callback.h soar_core_utils.h soar_core_api.h
soar_ecore_utils.o: soarapi_datatypes.h
soarapi.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h soarapi.h
soarapi.o: soar_core_api.h soarapi_datatypes.h soar_ecore_api.h
soarapi.o: soar_ecore_utils.h soar_core_utils.h soarapiUtils.h
soarapi.o: soarapiCallbacks.h scheduler.h
soarapiCallbacks.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
soarapiCallbacks.o: soarapi.h soar_core_api.h soarapi_datatypes.h
soarapiCallbacks.o: soar_ecore_api.h soar_ecore_utils.h soar_core_utils.h
soarapiUtils.o: soarapi.h soarkernel.h soarBuildOptions.h sysdep.h callback.h
soarapiUtils.o: soar_core_api.h soarapi_datatypes.h soar_ecore_api.h
soarapiUtils.o: soar_ecore_utils.h soar_core_utils.h soarapiUtils.h
soarapi_datatypes.o: soarapi_datatypes.h soarkernel.h soarBuildOptions.h
soarapi_datatypes.o: sysdep.h callback.h
symtab.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
sysdep.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
tempmem.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
timers.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
trace.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h
wmem.o: soarkernel.h soarBuildOptions.h sysdep.h callback.h


#=================================================================
#
# CLEANUP
#


clean:
	rm -rf *.o *.a core *~

distclean: clean
	rm -rf Makefile config.cache config.log config.status

