### 
### FILE               : blocks-world.soar
### AUTHOR(1)          : John.E.Laird [ Soar 8.1 ]
### CREATED(1)         : December 12, 1998
###

source simple.soar

sp {top-ps*elaborate*initial-state
   (state <s> ^name top-goal)
   -->
   (<s> ^world-state <s>
        ^ontop <ontop1> <ontop2> <ontop3> 
        ^clear <blockA> <blockB> <table>
        ^object <blockA> <blockB> <blockC> <table>)
   (<ontop1> ^top-block <blockA> 
             ^bottom-block <blockB>)
   (<ontop2> ^top-block <blockB> 
             ^bottom-block <table>)
   (<ontop3> ^top-block <blockC> 
             ^bottom-block <table>)
   (<blockA> ^name A ^type block)
   (<blockB> ^name B ^type block)
   (<blockC> ^name C ^type block)
   (<table>  ^name table ^type table)
   (write (crlf) |Initial state has A on B and B and C on the table.|)}

###
### TOP PROBLEM SPACE OPERATOR:
### BUILD-TOWER
###

sp {top-ps*propose*operator*build-tower
   (state <s> ^name top-state
              ^object <blockA> <blockB> <blockC> <table>)
   (<blockA> ^name A ^type block)
   (<blockB> ^name B ^type block)
   (<blockC> ^name C ^type block)
   (<table> ^name table ^type table)
 -{(<s> ^ontop <ontopa1> <ontopa2> <ontopa3>)
   (<ontopa1> ^top-block <blockA> 
              ^bottom-block <blockB>)
   (<ontopa2> ^top-block <blockB> 
              ^bottom-block <blockC>)
   (<ontopa3> ^top-block <blockC> 
              ^bottom-block <table>)}
   -->
   (<s> ^operator <o>)
   (<o> ^name build-tower 
        ^desired <ds>)
   (<ds> ^ontop <ontop1> <ontop2> <ontop3>)
   (<ontop1> ^top-block <blockA> 
             ^bottom-block <blockB>)
   (<ontop2> ^top-block <blockB> 
             ^bottom-block <blockC>)
   (<ontop3> ^top-block <blockC> 
             ^bottom-block <table>)
   (write (crlf) |The goal is to get A on B on C on the table.|)}

###
###
### BLOCKS-WORLD PROBLEM SPACE OPERATOR:
### MOVE-BLOCK
###
  
sp {blocks-world*propose*operator*move-block
   (state <s> ^name << move-block build-tower  >>
              ^world-state <ws>)
   (<ws> ^object <blockA> 
            { <> <blockA> <blockB> })
   (<blockA> ^type block)
-{(<ws> ^ontop <ontop>)
   (<ontop> ^top-block <blockA>
            ^bottom-block <blockB>)}
   -->
   (<s> ^operator <o> + =)
   (<o> ^name move-block 
        ^moving-block <blockA>
        ^destination <blockB>)
    }

###
### BLOCKS-WORLD PROBLEM SPACE:
### OPERATOR IMPLEMENTATION
###
  
sp {blocks-world*apply*operator*move-block*remove-ontop
   (state <s>  ^operator <o>
               ^world-state <ws>)
   (<ws> ^ontop <ontop>
         ^clear <mblock> <tblock>)
   (<ontop> ^top-block <mblock>
           -^bottom-block <tblock>)
   (<o> ^moving-block <mblock> 
        ^destination <tblock>)
   -->
   (<ws> ^ontop <ontop> -)}

sp {blocks-world*apply*operator*move-block*create-ontop
   (state <s> ^operator <o>
              ^world-state <ws>)
   (<ws> ^clear <mblock> <tblock>)
   (<o> ^moving-block <mblock>
        ^destination <tblock>)
   -->
   (<ws> ^ontop <ontop>)
   (<ontop> ^top-block <mblock>
            ^bottom-block <tblock>)}

sp {blocks-world*apply*operator*move-block*remove-clear
   (state <s>  ^operator <o>
               ^world-state <ws>)
   (<ws> ^clear <mblock> <tblock>)
   (<o> ^moving-block <mblock>
        ^destination <tblock>)
   (<tblock> ^type block)
   -->
   (<ws> ^clear <tblock> -)}

sp {blocks-world*apply*operator*move-block*create-clear
   (state <s>  ^operator <o>
               ^world-state <ws>)
   (<ws> ^ontop <ontop> ^clear <mblock> <tblock>)
   (<ontop> ^top-block <mblock>
            ^bottom-block { <> <tblock> <bblock>})
   (<bblock> ^type block)
   (<o> ^moving-block <mblock>
        ^destination <tblock>)
   -->
   (<ws> ^clear <bblock>)}

###
### SEARCH CONTROL
###

sp {blocks-world*prefer*clear-block 
   (state <s> ^operator <o> + 
              ^desired.clear <ub>
              ^world-state.ontop <ot>)
   (<ot> ^top-block <mb> 
         ^bottom-block <ub>)
   (<o> ^moving-block <mb>)
   -->
   (<s> ^operator <o> >)}

sp {blocks-world*prefer*ontop 
   (state <s> ^operator <o> + 
              ^desired.ontop <ot>
              ^world-state <ws>)
   (<ot> ^top-block <mb> 
         ^bottom-block <db>)
   (<o> ^moving-block <mb>
        ^destination <db>)
   -->
   (<s> ^operator <o> >)}

###
### BLOCKS-WORLD PROBLEM SPACE: 
### MONITOR STATE AND OPERATORS
###

sp {blocks-world*monitor*world-state
   (state <s> ^world-state.ontop <ontop>)
   (<ontop> ^top-block.name <top-name>
            ^bottom-block.name <bottom-name>)
   -->
   (write (crlf)|  ontop(| <top-name> |,| <bottom-name> |)|)}

sp {blocks-world*monitor*operator-application*move-block
   (state <s> ^operator <o>)
   (<o> ^name move-block
        ^moving-block <mob>
   	  ^destination <dob>)
   (<mob> ^name <mob-name>)
   (<dob> ^name <dob-name>)
   -->
   (write (crlf) |SELECT | <o> |: move-block(| <mob-name> |,| <dob-name> |)|)}

######### OPERATOR SUBGOALING

sp {default*opsub*propose*space*name
   :default
   (state <s> ^impasse no-change 
              ^attribute operator 
	        ^superstate.operator <so>)
   (<so> ^moving-block <mb>
         ^destination <des>)
   -->
   (<s> ^problem-space <sp>
        ^name operator-subgoal
        ^desired <d>)
   (<d> ^clear <mb> <des>)}

sp {default*generic*opsub*copy*superstate
   :default
   (state <s> ^name operator-subgoal 
              ^superstate <ss>)
   (<ss> ^ { <att> <> problem-space 
                   <> choices
                   <> impasse 
                   <> object 
                   <> name 
                   <> quiescence
                   <> superstate 
                   <> attribute 
                   <> operator 
                   <> desired }
	   <value>)
   -->
   (<s> ^<att> <value>)}

